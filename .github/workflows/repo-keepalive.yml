name: Repo Keepalive (weekly)

on:
  schedule:
    - cron: "0 3 * * 0"   # wÃ¶chentlich, So 03:00 UTC
  workflow_dispatch: {}

permissions:
  issues: write
  contents: none

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  keepalive:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      GH_TOKEN: ${{ github.token }}  # gh CLI nutzt dieses Token automatisch
    steps:
      - name: Keepalive
        shell: bash
        run: |
          set -euo pipefail

          DATE="$(date -u '+%Y-%m-%d %H:%M:%S UTC')"

          retry() {
            local max="$1"; shift
            local n=1 delay=2
            until "$@"; do
              if [ "$n" -ge "$max" ]; then
                echo "Command failed after ${n} attempts." >&2
                return 1
              fi
              sleep "$delay"
              n=$((n+1))
              delay=$((delay*2))
            done
          }

          # 1) Offene Issue mit Titel 'keepalive' suchen (JSON-Ausgabe, Nummer extrahieren)
          ISSUE_NUMBER="$(retry 3 gh issue list \
            --repo "$GITHUB_REPOSITORY" \
            --search 'keepalive in:title is:open' \
            --json number --jq '.[0].number // empty' || true)"

          # 2) Falls nicht vorhanden: erzeugen und Issue-Nummer aus ausgegebener URL extrahieren
          if [ -z "${ISSUE_NUMBER:-}" ]; then
            CREATE_OUT="$(retry 3 gh issue create \
              --repo "$GITHUB_REPOSITORY" \
              --title "keepalive" \
              --body "Automatisch erstellt, um Repository-Aktivitaet sicherzustellen.")"
            # Erwartete Ausgabe: https://github.com/<owner>/<repo>/issues/<nr>
            ISSUE_NUMBER="$(printf '%s\n' "$CREATE_OUT" | sed -E 's#.*/issues/([0-9]+).*#\1#')"
          fi

          if [ -z "${ISSUE_NUMBER:-}" ]; then
            echo "Could not determine issue number." >&2
            exit 1
          fi

          BODY="Keepalive-Ping: ${DATE} (run: ${GITHUB_RUN_ID})"

          # 3) Kommentar posten
          retry 3 gh issue comment "$ISSUE_NUMBER" \
            --repo "$GITHUB_REPOSITORY" \
            --body "$BODY"
