name: Repo Keepalive (weekly)

on:
  schedule:
    - cron: "0 3 * * 0"   # wÃ¶chentlich, So 03:00 UTC
  workflow_dispatch: {}

# minimale Rechte
permissions:
  issues: write
  contents: none

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  keepalive:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      GH_TOKEN: ${{ github.token }}  # gh CLI nutzt dieses Token automatisch
    steps:
      - name: Keepalive
        shell: bash
        run: |
          set -euo pipefail

          DATE="$(date -u '+%Y-%m-%d %H:%M:%S UTC')"

          retry() {
            local max="$1"; shift
            local n=1 delay=2
            until "$@"; do
              if [ "$n" -ge "$max" ]; then
                echo "Command failed after ${n} attempts." >&2
                return 1
              fi
              sleep "$delay"
              n=$((n+1))
              delay=$((delay*2))
            done
          }

          # 1) Offene Issues holen und nach exakt 'keepalive' filtern (keine PRs)
          ISSUE_NUMBER="$(retry 3 gh api \
            -H 'Accept: application/vnd.github+json' \
            --paginate \
            /repos/$GITHUB_REPOSITORY/issues \
            -f state=open -f per_page=100 \
            --jq '.[] | select(.pull_request|not) | select(.title==\"keepalive\") | .number' \
            | head -n1 || true)"

          # 2) Falls nicht vorhanden: erstellen und Nummer direkt aus JSON lesen
          if [ -z "${ISSUE_NUMBER:-}" ]; then
            ISSUE_NUMBER="$(retry 3 gh api \
              -H 'Accept: application/vnd.github+json' \
              -X POST \
              /repos/$GITHUB_REPOSITORY/issues \
              -f title='keepalive' \
              -f body='Automatisch erstellt, um Repository-Aktivitaet sicherzustellen.' \
              --jq '.number')"
          fi

          if [ -z "${ISSUE_NUMBER:-}" ]; then
            echo "Could not determine issue number." >&2
            exit 1
          fi

          BODY="Keepalive-Ping: ${DATE} (run: ${GITHUB_RUN_ID})"

          # 3) Kommentar posten
          retry 3 gh api \
            -H 'Accept: application/vnd.github+json' \
            -X POST \
            /repos/$GITHUB_REPOSITORY/issues/${ISSUE_NUMBER}/comments \
            -f body="$BODY"
