name: riverty-snapshots

on:
  schedule:
    - cron: '*/30 * * * *'   # alle 30 Minuten
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  snap-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 12

    env:
      URL_470: "https://phantomjscloud.com/api/browser/v2/ak-vk3pd-7m0av-nbdmz-ybd6x-v37kj/?requestBase64=eyJ1cmwiOiJodHRwczovL291ci5yaXZlcnR5LmNvbS9zZS80NzAtODQyLTM1MSIsInJlbmRlclR5cGUiOiJwbmciLCJvdXRwdXRBc0pzb24iOmZhbHNlLCJyZXF1ZXN0U2V0dGluZ3MiOnsid2FpdEludGVydmFsIjo1MDAwfSwicmVuZGVyU2V0dGluZ3MiOnsidmlld3BvcnQiOnsid2lkdGgiOjE5MjAsImhlaWdodCI6MTA4MH0sImNsaXBSZWN0YW5nbGUiOnsidG9wIjowLCJsZWZ0IjowLCJ3aWR0aCI6MTkyMCwiaGVpZ2h0IjoxMDgwfSwiem9vbUZhY3RvciI6MX19"
      URL_166: "https://phantomjscloud.com/api/browser/v2/ak-vc67v-06nxp-vqp2q-hjynv-p9w5d/?requestBase64=eyJ1cmwiOiJodHRwczovL291ci5yaXZlcnR5LmNvbS9zZS8xNjYtNTQ0LTMzMiIsInJlbmRlclR5cGUiOiJwbmciLCJvdXRwdXRBc0pzb24iOmZhbHNlLCJyZXF1ZXN0U2V0dGluZ3MiOnsid2FpdEludGVydmFsIjo1MDAwfSwicmVuZGVyU2V0dGluZ3MiOnsidmlld3BvcnQiOnsid2lkdGgiOjE5MjAsImhlaWdodCI6MTA4MH0sImNsaXBSZWN0YW5nbGUiOnsidG9wIjowLCJsZWZ0IjowLCJ3aWR0aCI6MTkyMCwiaGVpZ2h0IjoxMDgwfSwiem9vbUZhY3RvciI6MX19"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p public/470-842-351 public/166-544-332
          printf '' > public/.nojekyll
          echo "TS=$(date -u +%Y%m%d%H%M%S)" >> $GITHUB_ENV
          OWNER="${{ github.repository_owner }}"
          REPO="${GITHUB_REPOSITORY#*/}"
          echo "BASE_URL=https://${OWNER}.github.io/${REPO}" >> $GITHUB_ENV

      - name: Helper script
        shell: bash
        run: |
          cat > safe_refresh.sh <<'SH'
          #!/usr/bin/env bash
          # safe_refresh <id> <remote-url> <base-url>
          set -euo pipefail
          ID="$1"; REMOTE="$2"; BASE="$3"
          OUT="public/${ID}"
          IMG="${OUT}/image.png"
          TMP="${OUT}/.new.png"
          HDR="${OUT}/last_response_headers.txt"
          mkdir -p "${OUT}"

          # Vorhandenes Live-Bild holen (falls vorhanden)
          curl -fsSL "${BASE}/${ID}/image.png" -o "${IMG}" || true

          # Neues Bild + Header holen
          if curl -fsSL -D "${HDR}" --retry 2 --retry-delay 2 "${REMOTE}" -o "${TMP}"; then
            TYPE=$(file -b --mime-type "${TMP}" || echo "")
            SIZE=$(stat -c%s "${TMP}" 2>/dev/null || echo 0)
            # Valide nur, wenn PNG und ≥20 KB (verhindert weiße/Platzhalterbilder)
            if [ "$TYPE" = "image/png" ] && [ "${SIZE}" -ge 20000 ]; then
              mv -f "${TMP}" "${IMG}"
              echo "OK: ${ID} -> ${SIZE} bytes"
            else
              echo "WARN: ${ID} ungültig (type=${TYPE}, size=${SIZE}). Behalte letztes Bild."
              rm -f "${TMP}"
            fi
          else
            echo "WARN: ${ID} Abruf fehlgeschlagen (Limit/Netz). Behalte letztes Bild."
            rm -f "${TMP}" 2>/dev/null || true
          fi

          # Falls noch kein Bild: schwarzer 1x1 Platzhalter
          if [ ! -s "${IMG}" ]; then
            echo "INFO: ${ID} legt Platzhalter an."
            echo "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mP8/x8AAusB9b5/2moAAAAASUVORK5CYII=" | base64 -d > "${IMG}"
          fi

          # HTML + Status
          cat > "${OUT}/index.html" <<HTML
          <!doctype html><html lang="de"><head>
            <meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1">
            <title>Riverty ${ID}</title>
            <meta http-equiv="refresh" content="1800">
            <style>
              html,body{height:100%;margin:0;background:#000}
              img{position:fixed;inset:0;width:100%;height:100%;object-fit:contain;background:#000}
              .meta{position:fixed;left:8px;bottom:8px;color:#999;font:12px/1.4 Arial,Helvetica,sans-serif}
            </style>
          </head><body>
            <img src="image.png?v=${TS}" alt="Riverty ${ID}">
            <div class="meta">updated ${TS}</div>
          </body></html>
          HTML

          # einfache Statusseite
          SZ=$(stat -c%s "${IMG}" 2>/dev/null || echo 0)
          {
            echo "<!doctype html><meta charset='utf-8'><title>Status ${ID}</title>"
            echo "<pre>"
            echo "Time: ${TS}"
            echo "Image size: ${SZ} bytes"
            echo "Headers:"
            sed 's/^/  /' "${HDR}" 2>/dev/null || true
            echo "</pre>"
          } > "${OUT}/status.html"
          SH
          chmod +x safe_refresh.sh

      - name: Update 470-842-351
        shell: bash
        run: ./safe_refresh.sh "470-842-351" "$URL_470" "$BASE_URL"

      - name: Update 166-544-332
        shell: bash
        run: ./safe_refresh.sh "166-544-332" "$URL_166" "$BASE_URL"

      - name: Index
        shell: bash
        run: |
          cat > public/index.html <<HTML
          <!doctype html><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1">
          <title>Riverty Snapshots</title>
          <style>body{font-family:Arial,Helvetica,sans-serif;padding:24px;background:#111;color:#eee}a{color:#7bd}</style>
          <h1>Riverty Snapshots</h1>
          <ul>
            <li><a href="./470-842-351/">470-84
